library(xkcd)
install.packages("xkcd")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library(xkcd)
install.packages("xkcd")
install.packages(c("boot", "class", "cluster", "codetools", "digest", "foreign", "ggplot2", "gtable", "KernSmooth", "lattice", "manipulate", "MASS", "Matrix", "mgcv", "munsell", "nlme", "nnet", "Rcpp", "rpart", "scales", "spatial", "survival"))
library(xkcd)
install.packages("xkcd")
install.packages("ggplot2")
install.packages("xkcd")
library(xkcd)
vignette("xkcd-intro")
library(extrafont)
library(ggplot2)
if( 'xkcd' %in% fonts()) {
p <- ggplot() + geom_point(aes(x=mpg, y=wt), data=mtcars) +
theme(text = element_text(size = 16, family = "xkcd"))
}else {
warning("Not xkcd fonts installed!")
p <- ggplot() + geom_point(aes(x=mpg, y=wt), data=mtcars) +}
p
if( 'xkcd' %in% fonts()) {
p <- ggplot() + geom_point(aes(x=mpg, y=wt), data=mtcars) +
theme(text = element_text(size = 16, family = "xkcd"))
}else {
warning("Not xkcd fonts installed!")
p <- ggplot() + geom_point(aes(x=mpg, y=wt), data=mtcars)
}
download.file("http://simonsoftware.se/other/xkcd.ttf",dest="xkcd.ttf", mode="wb")
system("mkdir ~/.fonts")
system("cp xkcd.ttf  ~/.fonts")
font_import(pattern = "[X/x]kcd", prompt=FALSE)
fonts()
fonttable()
if(.Platform$OS.type != "unix") {
## Register fonts for Windows bitmap output
loadfonts(device="win")
} else {
loadfonts()
}
if( 'xkcd' %in% fonts()) {
p <- ggplot() + geom_point(aes(x=mpg, y=wt), data=mtcars) +
theme(text = element_text(size = 16, family = "xkcd"))
}else {
warning("Not xkcd fonts installed!")
p <- ggplot() + geom_point(aes(x=mpg, y=wt), data=mtcars)
}
p
download.file("http://simonsoftware.se/other/xkcd.ttf",dest="xkcd.ttf", mode="wb")
system("mkdir ~/.fonts")
system("cp xkcd.ttf  ~/.fonts")
font_import(pattern = "[X/x]kcd", prompt=FALSE)
font_import(pattern = "xkcd", prompt=FALSE)
font_import(pattern = "xkcd", prompt=FALSE)
fonts()
fonttable()
if(.Platform$OS.type != "unix") {
## Register fonts for Windows bitmap output
loadfonts(device="win")
} else {
loadfonts()
}
if( 'xkcd' %in% fonts()) {
p <- ggplot() + geom_point(aes(x=mpg, y=wt), data=mtcars) +
theme(text = element_text(size = 16, family = "xkcd"))
}else {
warning("Not xkcd fonts installed!")
p <- ggplot() + geom_point(aes(x=mpg, y=wt), data=mtcars)
}
p
ggsave("gr1.pdf", plot=p,  width=12, height=4)
embed_fonts("gr1.pdf")
xrange <- range(mtcars$mpg)
yrange <- range(mtcars$wt)
set.seed(123) # for reproducibility
p <- ggplot() + geom_point(aes(mpg, wt), data=mtcars) + + xkcdaxis(xrange,yrange)
p
p <- ggplot() + geom_point(aes(mpg, wt), data=mtcars) +  xkcdaxis(xrange,yrange)
p
data <- volunteers
data$xmin <- data$year - 0.1
data$xmax <- data$year + 0.1
data$ymin <- 50000
data$ymax <- data$number
xrange <- range(min(data$xmin)-0.1, max(data$xmax) + 0.1)
yrange <- range(min(data$ymin)+500, max(data$ymax) + 1000)
mapping <- aes(xmin=xmin,ymin=ymin,xmax=xmax,ymax=ymax)
p <- ggplot() + xkcdrect(mapping,data) +
+   xkcdaxis(xrange,yrange) +
+   xlab("Year") + ylab("Volunteers at Caritas Spain")
p # Figure 5.b
volunteers <- data.frame(year=c(2007:2011),
+                          number=c(56470, 56998, 59686, 61783, 64251))
xrange <- range(volunteers$year)
yrange <- range(volunteers$number)
ratioxy <-  diff(xrange) / diff(yrange)
datalines <- data.frame(xbegin=c(2008.3,2010.5),ybegin=c(63000,59600),
+                         xend=c(2008.5,2010.3), yend=c(63400,59000))
mapping <- aes(x, y, scale, ratioxy, angleofspine,
+                anglerighthumerus, anglelefthumerus,
+                anglerightradius, angleleftradius,
+                anglerightleg, angleleftleg, angleofneck)
dataman <- data.frame( x= c(2008,2010), y=c(63000, 58850),
+                       scale = 1000 ,
+                       ratioxy = ratioxy,
+                       angleofspine =  -pi/2  ,
+                       anglerighthumerus = c(-pi/6, -pi/6),
+                       anglelefthumerus = c(-pi/2 - pi/6, -pi/2 - pi/6),
+                       anglerightradius = c(pi/5, -pi/5),
+                       angleleftradius = c(pi/5, -pi/5),
+                       angleleftleg = 3*pi/2  + pi / 12 ,
+                       anglerightleg = 3*pi/2  - pi / 12,
+                       angleofneck = runif(1, 3*pi/2-pi/10, 3*pi/2+pi/10))
p <- ggplot() + geom_smooth(mapping=aes(x=year, y =number),
+
+
+
+
+
+
+
+
+   xkcdline(aes(xbegin=xbegin,ybegin=ybegin,xend=xend,yend=yend),
+            datalines, xjitteramount = 0.12)
p # Figure 5.a
data <- volunteers
data$xmin <- data$year - 0.1
data$xmax <- data$year + 0.1
data$ymin <- 50000
data$ymax <- data$number
xrange <- range(min(data$xmin)-0.1, max(data$xmax) + 0.1)
yrange <- range(min(data$ymin)+500, max(data$ymax) + 1000)
mapping <- aes(xmin=xmin,ymin=ymin,xmax=xmax,ymax=ymax)
p <- ggplot() + xkcdrect(mapping,data) +
+   xkcdaxis(xrange,yrange) +
+   xlab("Year") + ylab("Volunteers at Caritas Spain")
p # Figure 5.b
volunteers <- data.frame(year=c(2007:2011), number=c(56470, 56998, 59686, 61783, 64251))
xrange <- range(volunteers$year)
yrange <- range(volunteers$number)
ratioxy <-  diff(xrange) / diff(yrange)
datalines <- data.frame(xbegin=c(2008.3,2010.5),ybegin=c(63000,59600),
+                         xend=c(2008.5,2010.3), yend=c(63400,59000))
datalines <- data.frame(xbegin=c(2008.3,2010.5),ybegin=c(63000,59600), xend=c(2008.5,2010.3), yend=c(63400,59000))
mapping <- aes(x, y, scale, ratioxy, angleofspine, anglerighthumerus, anglelefthumerus, anglerightradius, angleleftradius, anglerightleg, angleleftleg, angleofneck)
mapping <- aes(x, y, scale, ratioxy, angleofspine, anglerighthumerus, anglelefthumerus, anglerightradius, angleleftradius, anglerightleg, angleleftleg, angleofneck)
dataman <- data.frame( x= c(2008,2010), y=c(63000, 58850),
scale = 1000 ,
ratioxy = ratioxy,
angleofspine =  -pi/2  ,
anglerighthumerus = c(-pi/6, -pi/6),
anglelefthumerus = c(-pi/2 - pi/6, -pi/2 - pi/6),
anglerightradius = c(pi/5, -pi/5),
angleleftradius = c(pi/5, -pi/5),
angleleftleg = 3*pi/2  + pi / 12 ,
anglerightleg = 3*pi/2  - pi / 12,
angleofneck = runif(1, 3*pi/2-pi/10, 3*pi/2+pi/10))
p <- ggplot() + geom_smooth(mapping=aes(x=year, y =number),scale = 1000 ,ratioxy = ratioxy,
+                       angleofspine =  -pi/2  ,
+                       anglerighthumerus = c(-pi/6, -pi/6),
+                       anglelefthumerus = c(-pi/2 - pi/6, -pi/2 - pi/6),
+                       anglerightradius = c(pi/5, -pi/5),
+                       angleleftradius = c(pi/5, -pi/5),
+                       angleleftleg = 3*pi/2  + pi / 12 ,
+                       anglerightleg = 3*pi/2  - pi / 12,
+                       angleofneck = runif(1, 3*pi/2-pi/10, 3*pi/2+pi/10))
dataman <- data.frame( x= c(2008,2010), y=c(63000, 58850),
scale = 1000 ,
ratioxy = ratioxy,
angleofspine =  -pi/2  ,
anglerighthumerus = c(-pi/6, -pi/6),
anglelefthumerus = c(-pi/2 - pi/6, -pi/2 - pi/6),
anglerightradius = c(pi/5, -pi/5),
angleleftradius = c(pi/5, -pi/5),
angleleftleg = 3*pi/2  + pi / 12 ,
anglerightleg = 3*pi/2  - pi / 12,
angleofneck = runif(1, 3*pi/2-pi/10, 3*pi/2+pi/10))
p <- ggplot() + geom_smooth(mapping=aes(x=year, y =number),scale = 1000 ,ratioxy = ratioxy,
angleofspine =  -pi/2  ,
anglerighthumerus = c(-pi/6, -pi/6),
anglelefthumerus = c(-pi/2 - pi/6, -pi/2 - pi/6),
anglerightradius = c(pi/5, -pi/5),
angleleftradius = c(pi/5, -pi/5),
angleleftleg = 3*pi/2  + pi / 12 ,
anglerightleg = 3*pi/2  - pi / 12,
angleofneck = runif(1, 3*pi/2-pi/10, 3*pi/2+pi/10))
rainbow(10)
plot(cars)
plot(cars)
plot(cars)
data(mice, package = "datarium")
library(tidyverse)
install.packages("tidyverse")
install.packages("datarium")
library(datarium)
install.packages("datarium")
library(datarium)
data(mice, package = "datarium")
install.packages("datarium")
library(datarium)
data(mice, package = "datarium")
force(mice)
library(datarium)
data(mice, package = "datarium")
stat.test <- mice %>% wilcox_test(weight ~ 1, mu = 25)
library(datarium)
data(mice, package = "datarium")
stat.test <-wilcox_test(mice$weight, mu = 25)
library(datarium)
data(mice, package = "datarium")
stat.test <- wilcox.test(mice$weight, mu = 25)
library(datarium)
data("genderweight", package = "datarium")
stat.test <- wilcox.test(mice$weight, mu = 25)
force(genderweight)
library(datarium)
dataSouris = data("genderweight", package = "datarium")
stat.test = wilcox.test(dataSouris$weight, mu = 25)
library(datarium)
dataSouris = data("genderweight", package = "datarium")
stat.test = wilcox.test(dataSouris, mu = 25)
library(datarium)
dataSouris = data(mice, package = "datarium")
stat.test = wilcox.test(dataSouris, mu = 25)
library(datarium)
dataSouris = data(mice, package = "datarium")
stat.test = wilcox.test(dataSouris, mu = 25)
library(datarium)
dataSouris = data(mice, package = "datarium")
stat.test = wilcox.test(dataSouris$weight , mu = 25)
library(datarium)
dataSouris = data(mice, package = "datarium")
#stat.test = wilcox.test(dataSouris$weight , mu = 25)
force(mice)
library(datarium)
mice = data(mice, package = "datarium")
stat.test = wilcox.test(mice$weight , mu = 25)
library(datarium)
data(mice, package = "datarium")
stat.test = wilcox.test(mice$weight , mu = 25)
library(datarium)
data(mice, package = "datarium")
ggboxplot(
mice$weight, width = 0.5, add = c("mean", "jitter"),
ylab = "Weight (g)", xlab = FALSE
)
library(datarium)
data(mice, package = "datarium")
plot(mice)
library(datarium)
data(mice, package = "datarium")
plot(mice$weight)
stat.test = wilcox.test(mice$weight , mu = 25)
View(mice)
View(mice)
library(datarium)
data(mice, package = "datarium")
boxplot(mice$weight)
stat.test = wilcox.test(mice$weight , mu = 25)
library(datarium)
data(mice, package = "datarium")
boxplot(mice$weight,ylab="poids de la souris (g)")
stat.test = wilcox.test(mice$weight , mu = 25)
library(datarium)
data(mice, package = "datarium")
boxplot(mice$weight,ylab="poids de la souris (g)",add = c("mean", "jitter"))
library(datarium)
data(mice, package = "datarium")
boxplot(mice$weight,ylab="poids de la souris (g)")
stat.test = wilcox.test(mice$weight , mu = 25)
library(datarium)
data(mice, package = "datarium")
boxplot(mice$weight,ylab="poids de la souris (g)")
stat.test = wilcox.test(mice$weight , mu = 25)
head(stat.test)
library(datarium)
data(mice, package = "datarium")
boxplot(mice$weight,ylab="poids de la souris (g)")
stat.test = wilcox.test(mice$weight , mu = 25)
head(stat.test)
ggdensity(mice, x = "weight", rug = TRUE, fill = "lightgray") +
scale_x_continuous(limits = c(15, 27)) +
stat_central_tendency(type = "median", color = "red", linetype = "dashed") +
geom_vline(xintercept = 25, color = "blue", linetype = "dashed") +
labs(subtitle = get_test_label(stat.test, detailed = TRUE))
library(datarium)
data(mice, package = "datarium")
boxplot(mice$weight,ylab="poids de la souris (g)")
stat.test = wilcox.test(mice$weight , mu = 25)
head(stat.test)
ggdensity(mice, x = "weight", rug = TRUE, fill = "lightgray") +
scale_x_continuous(limits = c(15, 27)) +
stat_central_tendency(type = "median", color = "red", linetype = "dashed") +
geom_vline(xintercept = 25, color = "blue", linetype = "dashed") +
labs(subtitle = get_test_label(stat.test, detailed = TRUE)))
library(datarium)
data(mice, package = "datarium")
boxplot(mice$weight,ylab="poids de la souris (g)")
stat.test = wilcox.test(mice$weight , mu = 25)
head(stat.test)
ggdensity(mice, x = "weight", rug = TRUE, fill = "lightgray")
install.packages("ggdensity")
install.packages("ggdensity")
install.packages("ggpubr")
library(datarium)
data(mice, package = "datarium")
boxplot(mice$weight,ylab="poids de la souris (g)")
stat.test = wilcox.test(mice$weight , mu = 25)
head(stat.test)
ggdensity(mice, x = "weight", rug = TRUE, fill = "lightgray")
my_data <- PlantGrowth
my_data <- PlantGrowth
head(my_data)
my_data <- PlantGrowth
head(my_data)
kruskal.test(weight ~ group, data = my_data)
install.packages("ggpubr")
my_data <- PlantGrowth
head(my_data)
library("ggpubr")
my_data <- PlantGrowth
head(my_data)
library("ggpubr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
my_data <- PlantGrowth
head(my_data)
kruskal.test(weight ~ group, data = my_data)
setwd("~/Documents/Documents Star wars/Origine des Cartes/OrigineDesCarte")
setwd("~/Documents/Documents Star wars/Origine des Cartes/OrigineDesCarte")
nomFichier = "Feuille 1-OrigineDesCarteClasse.tsv"
tableau = read.csv(nomFichier, sep = "\t")
head(tableau)
tableau = read.csv(nomFichier, sep = "\t", skip = 0)
head(tableau)
tableau = read.csv(nomFichier, sep = "\t", skip = 0)
setwd("~/Documents/Documents Star wars/Origine des Cartes/OrigineDesCarte")
nomFichier = "Feuille 1-OrigineDesCarteClasse.tsv"
tableau = read.csv(nomFichier, sep = "\t", skip = 0)
head(tableau)
tableau = read.csv(nomFichier, sep = "\t")
setwd("~/Documents/Documents Star wars/Origine des Cartes")
nomFichier = "OrigineDesCartes.tsv"
tableau = read.csv(nomFichier, sep = "\t")
head(tableau)
View(tableau)
tableau = read.csv(nomFichier, sep = "\t",row.names=1)
